forEach():- The forEach() method used for loop over entire array of element in the array. It returns each element in the array by processing the function that function known as callback function and it takes three arguments. First argument is main argument of the function and other two are optional.
 forEach((element,index,array)=>{....})

ex: let arr =[1,2,3,4,5];
const result=arr.forEach(element=>{element});
console.log(result)
//output
//1
//2
//3
//4
//5

map():- The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.
map((element,index,array)=>{....})

ex: let arr =[1,2,3,4,5];
const result=arr.map(element=>{element*2});
console.log(result)
//output= [2,4,6,8,10]

filter():- The filter() method creates a new array with all element that passes the test or define condition in the provided function. 

ex: let arr =[1,2,3,4,5];
let result=arr.filter(element=>{element>5});
console.log(result)
//output= [6,8,10]

reduce():- The reduce () method returns a single value with all elements that passess the test in the provided function. The function takes four parameters as arguments. First as a initial value and second argument as a current value.
 third and fourth arguments takes as optional. The reduce method take two parameter one is callback and other is initial value. In the reduce method if initial value not given then first element in the array takes as a initial value and current value takes as index one position value as current value. 

reduce(callback,initialValue)
reduce((accumulator, current, index, array)=>{..},initialValue)

let arr = [1, 2, 3, 4, 5];
let result = arr.reduce((acc, curr) => acc + curr, 0);
console.log(result);

//output 15


.find():-The find method returns the value of the first element in the array that satisfies the provided testing function. if not pass any test in the provided function, undefined is returned. the callback function takes three argument element, index and array.
find((element,index,array)=>{....})

let arr = [1, 2, 3, 4, 5];
let result= arr.find((element)=>element>6)
console.log(result)
//undefined

findIndex():- The findIndex() method returns the index of the first element in the array that satisfies the provided testing function. Otherwise, it returns -1, the callback function takes three argument element, index and array.

findIndex((element,index,array)=>{....})

let arr = [1, 2, 3, 4, 5];
let result= arr.find((element)=>element<3)
console.log(result)
//output
//1


Q:-If you like to filter out one object element in an array which method do you like to use: filter or find ?
Ans:- I like to use find() method because the find() method returns the first element in array that satisfies the provided testing function and the filter() method returns all the array element that satisfies the provided testing function. 


Difference between var, let and const:-

var :- it is used for declaring a variable. Before ES6(2015) version var is used for declare as a variable. it is a global scope variable.
let :- let is introduce and implement ES6(2015) version. it is also block scope variable. it onle accessible in the block scope which block scope it is declare. it not accessible outside of this block. 
const:- it also used to define a variable. it can not mutate once it is define. it also a block scope variable  